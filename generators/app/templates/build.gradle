buildscript {
    ext {
        springBootVersion = '<%= springBootVersion %>'
    }
    repositories {
        mavenLocal()
        <% if( extraMavenRepo!='' ) {%>maven { url '<%=extraMavenRepo%>' }<%}%>
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath('net.researchgate:gradle-release:2.3.4')
    }
}

group = '<%=organizationName%>'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'docker'
apply plugin: 'net.researchgate.release'

jar {
    baseName = '<%= baseName %>'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    <% if( extraMavenRepo!='' ) {%>maven { url '<%=extraMavenRepo%>' }<%}%>
    mavenCentral()
}

dependencies {
    compile('org.codehaus.groovy:groovy')
    <% if( jetty ) {%>compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }<%}%>
    <% if( actuator ) {%>compile('org.springframework.boot:spring-boot-starter-actuator')<%}%>
    <% if( jpa ) {%>compile('org.springframework.boot:spring-boot-starter-data-jpa')<%}%>
    <% if( sql ) {%>//TODO Do not need h2 runtime in product environment.
    compile("org.jadira.usertype:usertype.core:4.0.0.GA") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    runtime('com.h2database:h2:1.4.190')
    runtime('org.postgresql:postgresql:9.4-1201-jdbc4')<%}%>
    <% if( rpc ) {%>compile('org.nofdev:service-host-mvc:1.1.1')
    compile('org.nofdev:service-client-java:1.1.0')<%}%>
    testCompile(
        'org.springframework.boot:spring-boot-starter-test',
        'org.spockframework:spock-core:1.0-groovy-2.4',
        'org.spockframework:spock-spring:1.0-groovy-2.4'
    )
    <% if( hasSample ) {%>testCompile('org.mock-server:mockserver-netty:3.10.2')
    compile('net.logstash.logback:logstash-logback-encoder:4.5.1')<%}%>
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from (jar) {
                include "*${version}.jar"
                rename "(.*)-${version}(.*)", 'app.jar'
            }
            into stageDir
        }
    }
}

release {
    git {
        requireBranch = 'develop'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
    }
}
afterReleaseBuild.dependsOn buildDocker